<style lang="less">

  @font-face {font-family: "daka";
    src: url('iconfont.eot?t=1507950766859'); /* IE9*/
    src: url('iconfont.eot?t=1507950766859#iefix') format('embedded-opentype'), /* IE6-IE8 */
    url('data:application/x-font-woff;charset=utf-8;base64,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') format('woff'),
    url('iconfont.ttf?t=1507950766859') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+*/
    url('iconfont.svg?t=1507950766859#daka') format('svg'); /* iOS 4.1- */
  }

  .daka {
    font-family:"daka" !important;
    font-size:16px;
    font-style:normal;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .icon-appreciate:before { content: "\e644"; }

  .icon-locationfill:before { content: "\e650"; }

  .icon-roundcheckfill:before { content: "\e656"; }

  .icon-search:before { content: "\e65c"; }

  .icon-timefill:before { content: "\e65e"; }

  .icon-unfold:before { content: "\e661"; }

  .icon-comment:before { content: "\e667"; }

  .icon-right:before { content: "\e6a3"; }

  .icon-refund:before { content: "\e6ac"; }

  .icon-brandfill:before { content: "\e712"; }

  .icon-apps:before { content: "\e729"; }

  .icon-playfill:before { content: "\e74f"; }

  .icon-zengjia:before { content: "\e608"; }

  .icon-shanchu:before { content: "\e62a"; }

  .icon-triangledownfill:before { content: "\e79b"; }

  .icon-triangleupfill:before { content: "\e79c"; }

  .icon-fenxiang1:before { content: "\e62c"; }

  .icon-bianji:before { content: "\e628"; }

  .icon-lianxi:before { content: "\e60c"; }

  .icon-renzheng:before { content: "\e854"; }

  .icon-yishimingrenzheng1:before { content: "\e61e"; }

  .icon-fenxiang:before { content: "\e602"; }

  .icon-fabu:before { content: "\e60b"; }

  .icon-zhongyao1:before { content: "\e6a9"; }

  .icon-home:before { content: "\e601"; }

  .icon-qr_code_light:before { content: "\e7f8"; }

  .icon-baoming:before { content: "\e634"; }

  .icon-daka:before { content: "\e635"; }

  .icon-zhanghu:before { content: "\e600"; }


  page {
  min-height: 100%;
  background: #f7f7f7;
}
</style>

<script>
import wepy from 'wepy'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/circle/index',

      'pages/find/index',

      'pages/launched/index',

      'pages/notice/index',

      'pages/user/index',
      'pages/user/editInfo',
      'pages/user/home',
      'pages/user/account',
      'pages/user/certification',
      'pages/user/registered',
      'pages/user/published',
      'pages/user/artist',
      'pages/user/detail',
      'pages/user/recharge',
      'pages/user/cash',




    ],
    window: {
      navigationBarBackgroundColor: '#dc3b23',
      // navigationBarTextStyle: "black",
      navigationBarTitleText: '大咖秀',
      backgroundColor: '#000',
      backgroundTextStyle: "dark",
      // enablePullDownRefresh: true,
      onReachBottomDistance: 20
    },
    tabBar: {
      backgroundColor: "#fff",
      color: "#717171",
      selectedColor: "#dc3b23",
      position: 'bottom',
      list: [{
        pagePath: "pages/circle/index",
        text: "大咖",
        iconPath: "images/icons/people.png",
        selectedIconPath: "images/icons/people_active.png"
      }, {
        pagePath: "pages/find/index",
        text: "大咖秀",
        iconPath: "images/icons/find.png",
        selectedIconPath: "images/icons/find_active.png"
      }, {
        pagePath: "pages/launched/index",
        text: "发动态",
        iconPath: "images/icons/add.png",
        selectedIconPath: "images/icons/add.png"
      }, {
        pagePath: "pages/notice/index",
        text: "通告",
        iconPath: "images/icons/notice.png",
        selectedIconPath: "images/icons/notice_active.png"
      }, {
        pagePath: "pages/user/index",
        text: "我的",
        iconPath: "images/icons/me.png",
        selectedIconPath: "images/icons/me_active.png"
      }]
    },
    debug: true
  }

//  globalData = {
//    userInfo: null
//  }
  globalData = {
    user: null,
  }

  /* ============= 工具方法（app没法用mixins，就再写一遍了） ============= */
  isObject(item) {
    return typeof item === 'object' && !this.isArray(item)
  }
  isArray(item) {
    return Object.prototype.toString.apply(item) === '[object Array]'
  }
  isUndefined(item) {
    return typeof item === 'undefined'
  }

  /* ========================= 更新缓存信息 ======================== */
  $updateGlobalData(name, obj) {
    // 校验: globalData
    if (!this.globalData) return
    // 校验: 操作字段
    if (typeof name !== 'string' || name === '') return {}
    // 取已有信息
    const info = this.globalData[name] || {}
    // 更新缓存
    if (obj && this.isObject(obj)) {
      // Object合并第一层
      this.globalData[name] = Object.assign({}, info, obj)
    } else if (!this.isUndefined(obj)) {
      // 其他非undefined数据直接覆盖
      this.globalData[name] = obj
    }
    this.$apply && this.$apply()
    console.info(`[${obj ? 'UPDATE' : 'GET'} GlobalData ${name}]:`, this.globalData[name])
    return this.globalData[name]
  }
}
</script>
