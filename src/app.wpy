<style lang="less">

  @font-face {font-family: "daka";
    src: url('iconfont.eot?t=1508338015959'); /* IE9*/
    src: url('iconfont.eot?t=1508338015959#iefix') format('embedded-opentype'), /* IE6-IE8 */
    url('data:application/x-font-woff;charset=utf-8;base64,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') format('woff'),
    url('iconfont.ttf?t=1508338015959') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+*/
    url('iconfont.svg?t=1508338015959#daka') format('svg'); /* iOS 4.1- */
  }

  .daka {
    font-family:"daka" !important;
    font-size:16px;
    font-style:normal;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .icon-appreciate:before { content: "\e644"; }

  .icon-locationfill:before { content: "\e650"; }

  .icon-roundcheckfill:before { content: "\e656"; }

  .icon-search:before { content: "\e65c"; }

  .icon-timefill:before { content: "\e65e"; }

  .icon-unfold:before { content: "\e661"; }

  .icon-comment:before { content: "\e667"; }

  .icon-right:before { content: "\e6a3"; }

  .icon-refund:before { content: "\e6ac"; }

  .icon-brandfill:before { content: "\e712"; }

  .icon-apps:before { content: "\e729"; }

  .icon-playfill:before { content: "\e74f"; }

  .icon-zengjia:before { content: "\e608"; }

  .icon-shanchu:before { content: "\e62a"; }

  .icon-triangledownfill:before { content: "\e79b"; }

  .icon-triangleupfill:before { content: "\e79c"; }

  .icon-fenxiang1:before { content: "\e62c"; }

  .icon-bianji:before { content: "\e628"; }

  .icon-xuanze:before { content: "\e63e"; }

  .icon-lianxi:before { content: "\e60c"; }

  .icon-renzheng:before { content: "\e854"; }

  .icon-yishimingrenzheng1:before { content: "\e61e"; }

  .icon-fenxiang:before { content: "\e602"; }

  .icon-fabu:before { content: "\e60b"; }

  .icon-zhongyao1:before { content: "\e6a9"; }

  .icon-home:before { content: "\e601"; }

  .icon-qr_code_light:before { content: "\e7f8"; }

  .icon-baoming:before { content: "\e634"; }

  .icon-daka:before { content: "\e635"; }

  .icon-zhanghu:before { content: "\e600"; }



  page {
  min-height: 100%;
  background: #f7f7f7;
}
</style>

<script>
import wepy from 'wepy'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/circle/index',

      'pages/find/index',

      'pages/launched/index',
      'pages/launched/dynamic',
      'pages/launched/notice',

      'pages/notice/index',

      'pages/user/index',
      'pages/user/editInfo',
      'pages/user/home',
      'pages/user/account',
      'pages/user/certification',
      'pages/user/realname',
      'pages/user/registered',
      'pages/user/published',
      'pages/user/artist',
      'pages/user/detail',
      'pages/user/recharge',
      'pages/user/cash',
      'pages/user/bankcard',




    ],
    window: {
      navigationBarBackgroundColor: '#dc3b23',
      // navigationBarTextStyle: "black",
      navigationBarTitleText: '大咖秀',
      backgroundColor: '#000',
      backgroundTextStyle: "dark",
      // enablePullDownRefresh: true,
      onReachBottomDistance: 20
    },
    tabBar: {
      backgroundColor: "#fff",
      color: "#717171",
      selectedColor: "#dc3b23",
      position: 'bottom',
      list: [{
        pagePath: "pages/circle/index",
        text: "大咖",
        iconPath: "images/icons/people.png",
        selectedIconPath: "images/icons/people_active.png"
      }, {
        pagePath: "pages/find/index",
        text: "大咖秀",
        iconPath: "images/icons/find.png",
        selectedIconPath: "images/icons/find_active.png"
      }, {
        pagePath: "pages/launched/index",
        text: "发动态",
        iconPath: "images/icons/add.png",
        selectedIconPath: "images/icons/add.png"
      }, {
        pagePath: "pages/notice/index",
        text: "通告",
        iconPath: "images/icons/notice.png",
        selectedIconPath: "images/icons/notice_active.png"
      }, {
        pagePath: "pages/user/index",
        text: "我的",
        iconPath: "images/icons/me.png",
        selectedIconPath: "images/icons/me_active.png"
      }]
    },
    debug: true
  }

//  globalData = {
//    userInfo: null
//  }
  globalData = {
    user: null,
  }

  /* ============= 工具方法（app没法用mixins，就再写一遍了） ============= */
  isObject(item) {
    return typeof item === 'object' && !this.isArray(item)
  }
  isArray(item) {
    return Object.prototype.toString.apply(item) === '[object Array]'
  }
  isUndefined(item) {
    return typeof item === 'undefined'
  }

  /* ========================= 更新缓存信息 ======================== */
  $updateGlobalData(name, obj) {
    // 校验: globalData
    if (!this.globalData) return
    // 校验: 操作字段
    if (typeof name !== 'string' || name === '') return {}
    // 取已有信息
    const info = this.globalData[name] || {}
    // 更新缓存
    if (obj && this.isObject(obj)) {
      // Object合并第一层
      this.globalData[name] = Object.assign({}, info, obj)
    } else if (!this.isUndefined(obj)) {
      // 其他非undefined数据直接覆盖
      this.globalData[name] = obj
    }
    this.$apply && this.$apply()
    console.info(`[${obj ? 'UPDATE' : 'GET'} GlobalData ${name}]:`, this.globalData[name])
    return this.globalData[name]
  }
}
</script>
