<style lang="less">
  @font-face {font-family: "daka";
    src: url('//at.alicdn.com/t/font_438584_9htxr7qqm8oos9k9.eot?t=1508416060658'); /* IE9*/
    src: url('//at.alicdn.com/t/font_438584_9htxr7qqm8oos9k9.eot?t=1508416060658#iefix') format('embedded-opentype'), /* IE6-IE8 */
    url('data:application/x-font-woff;charset=utf-8;base64,') format('woff'),
    url('//at.alicdn.com/t/font_438584_9htxr7qqm8oos9k9.ttf?t=1508416060658') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+*/
    url('//at.alicdn.com/t/font_438584_9htxr7qqm8oos9k9.svg?t=1508416060658#daka') format('svg'); /* iOS 4.1- */
  }

  .daka {
    font-family:"daka" !important;
    font-size:16px;
    font-style:normal;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .icon-appreciate:before { content: "\e644"; }

  .icon-locationfill:before { content: "\e650"; }

  .icon-roundcheckfill:before { content: "\e656"; }

  .icon-search:before { content: "\e65c"; }

  .icon-timefill:before { content: "\e65e"; }

  .icon-unfold:before { content: "\e661"; }

  .icon-comment:before { content: "\e667"; }

  .icon-right:before { content: "\e6a3"; }

  .icon-refund:before { content: "\e6ac"; }

  .icon-brandfill:before { content: "\e712"; }

  .icon-apps:before { content: "\e729"; }

  .icon-playfill:before { content: "\e74f"; }

  .icon-zengjia:before { content: "\e608"; }

  .icon-shanchu:before { content: "\e62a"; }

  .icon-triangledownfill:before { content: "\e79b"; }

  .icon-triangleupfill:before { content: "\e79c"; }

  .icon-fenxiang1:before { content: "\e62c"; }

  .icon-bianji:before { content: "\e628"; }

  .icon-xuanze:before { content: "\e63e"; }

  .icon-lianxi:before { content: "\e60c"; }

  .icon-renzheng:before { content: "\e854"; }

  .icon-yishimingrenzheng1:before { content: "\e61e"; }

  .icon-xiaoxi3-copy:before { content: "\e603"; }

  .icon-fenxiang:before { content: "\e602"; }

  .icon-fabu:before { content: "\e60b"; }

  .icon-zhongyao1:before { content: "\e6a9"; }

  .icon-home:before { content: "\e601"; }

  .icon-qr_code_light:before { content: "\e7f8"; }

  .icon-baoming:before { content: "\e634"; }

  .icon-daka:before { content: "\e635"; }

  .icon-zhanghu:before { content: "\e600"; }

  page {
  min-height: 100%;
  background: #f7f7f7;
}
</style>

<script>
import wepy from 'wepy'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/circle/index',
      'pages/notice/index',
      
      'pages/circle/search',

      'pages/find/index',

      'pages/launched/index',
      'pages/launched/dynamic',
      'pages/launched/notice',



      'pages/user/index',
      'pages/user/editInfo',
      'pages/user/home',
      'pages/user/account',
      'pages/user/certification',
      'pages/user/realname',
      'pages/user/registered',
      'pages/user/published',
      'pages/user/artist',
      'pages/user/detail',
      'pages/user/recharge',
      'pages/user/cash',
      'pages/user/bankcard',
      'pages/user/nickname',
      'pages/user/role',
      'pages/user/company',
      'pages/user/school',
      'pages/user/signature',




    ],
    window: {
      navigationBarBackgroundColor: '#dc3b23',
      // navigationBarTextStyle: "black",
      navigationBarTitleText: '大咖秀',
      backgroundColor: '#000',
      backgroundTextStyle: "dark",
      // enablePullDownRefresh: true,
      onReachBottomDistance: 20
    },
    tabBar: {
      backgroundColor: "#fff",
      color: "#717171",
      selectedColor: "#dc3b23",
      position: 'bottom',
      list: [{
        pagePath: "pages/circle/index",
        text: "大咖",
        iconPath: "images/icons/people.png",
        selectedIconPath: "images/icons/people_active.png"
      }, {
        pagePath: "pages/find/index",
        text: "大咖秀",
        iconPath: "images/icons/find.png",
        selectedIconPath: "images/icons/find_active.png"
      }, {
        pagePath: "pages/launched/index",
        text: "发动态",
        iconPath: "images/icons/add.png",
        selectedIconPath: "images/icons/add.png"
      }, {
        pagePath: "pages/notice/index",
        text: "通告",
        iconPath: "images/icons/notice.png",
        selectedIconPath: "images/icons/notice_active.png"
      }, {
        pagePath: "pages/user/index",
        text: "我的",
        iconPath: "images/icons/me.png",
        selectedIconPath: "images/icons/me_active.png"
      }]
    },
    debug: true
  }

//  globalData = {
//    userInfo: null
//  }
  globalData = {
    user: null,
  }

  /* ============= 工具方法（app没法用mixins，就再写一遍了） ============= */
  isObject(item) {
    return typeof item === 'object' && !this.isArray(item)
  }
  isArray(item) {
    return Object.prototype.toString.apply(item) === '[object Array]'
  }
  isUndefined(item) {
    return typeof item === 'undefined'
  }

  /* ========================= 更新缓存信息 ======================== */
  $updateGlobalData(name, obj) {
    // 校验: globalData
    if (!this.globalData) return
    // 校验: 操作字段
    if (typeof name !== 'string' || name === '') return {}
    // 取已有信息
    const info = this.globalData[name] || {}
    // 更新缓存
    if (obj && this.isObject(obj)) {
      // Object合并第一层
      this.globalData[name] = Object.assign({}, info, obj)
    } else if (!this.isUndefined(obj)) {
      // 其他非undefined数据直接覆盖
      this.globalData[name] = obj
    }
    this.$apply && this.$apply()
    console.info(`[${obj ? 'UPDATE' : 'GET'} GlobalData ${name}]:`, this.globalData[name])
    return this.globalData[name]
  }

}
</script>
