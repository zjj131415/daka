<style lang="less" scoped>
  .character {
    position: absolute;
    left: 0;
    top: 0;
    z-index: 2  ;
    width: 100%;
    height: 100%;
    background: #fff;
    .charCont {
      padding-top: 40rpx;
    }
    .charTit {
      height: 30rpx;
      display: flex;
      align-items: center;
      margin: 0 40rpx;
      padding-left: 10rpx;
      border-left: 4rpx solid #dc3b23;
      font-size: 28rpx;
      color: #333;
    }
    .charTags {
      padding: 20rpx 30rpx 0 30rpx;
      display: flex;
      flex-wrap: wrap;
      .tag {
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        height: 50rpx;
        padding: 0 30rpx;
        margin: 9rpx;
        border-radius: 10rpx;
        border: 1px solid #dcdcdc;
        font-size: 28rpx;
        color: #878787;
        .rm {
          display: flex;
          align-items: center;
          justify-content: center;
          width: 28rpx;
          height: 28rpx;
          border-radius: 100%;
          background: #dcdcdc;
          position: absolute;
          right: -10rpx;
          top: -12rpx;
          font-size: 24rpx;
          color: #5d5d5d;
        }
      }
    }
    .sub-tags-box {
      position: fixed;
      left: 0;
      bottom: 0;
      z-index: 10;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,.5)
    }
    .sub-tags {
      padding-top: 100rpx;
      position: absolute;
      left: 0;
      bottom: 0;
      width:  100%;
      margin-top: 30rpx;
      height: 780rpx;
      background: #fff;
      .tag {
        float: left;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 50rpx;
        padding: 0 30rpx;
        margin: 10rpx;
        border-radius: 10rpx;
        border: 1px solid #f4f4f4;
        font-size: 30rpx;;
        color: #878787;
        &.active {
          border-color: #dc3b23;
        }
      }
    }
    .inptu-btn {
      margin: 0 40rpx;
      margin-top: 30rpx;
      display: flex;
      align-items: center;
      button{
        display: flex;
        align-items: center;
        justify-content: center;
        height: 70rpx;
        font-size: 30rpx;
        background: transparent;
      }
    }
    .input {
      box-sizing: border-box;
      width: 400rpx;
      height: 70rpx;
      padding: 5rpx 10rpx;
      border-radius: 10rpx;
      border: 1px solid #eee;
      font-size: 28rpx;
      color: #333;
    }
    .btnBox {
      position: absolute;
      left: 0;
      bottom: 0;
      width: 100%;
      padding: 20px;
      box-sizing: border-box;
    }
    .addbtn {
      position: relative;
      height: 66rpx;
      width: 100rpx;
      display: flex;
      align-items: center;
      justify-content: center;
      outline: none;
      color: #dc3b23;
      font-size: 68rpx;
    }
    .close {
      position: absolute;
      bottom: 100rpx;
      left: 50%;
      transform: translate3d(-50%, 0,0);
      color: #666;
      font-size: 80rpx;
    }
  }
</style>
<template>
  <view>
     <view class="character">
      <form bindsubmit="submit">
        <view class="charCont">
          <view class="charTit">我的角色</view>
          <view class="charTags">
            <block wx:for="{{selectTypeOne}}" wx:key="{{index}}">
              <view class="tag">
                {{item}}
                <text class="rm">×</text>
              </view>
            </block>
          </view>
        </view>
        <view class="charCont">
          <view class="charTit">自定义角色</view>
          <view class="inptu-btn">
            <input class="input" value="{{diyType}}" bindinput="tap" data-id="3" placeholder="如: 美工 建筑师"/>
            <view class="addbtn daka icon-zengjia" @tap="tap" data-id="2"></view>
          </view>
        </view>
        <view class="charCont">
          <view class="charTit">演艺角色</view>
          <view class="charTags">
            <block wx:for="{{typeOne}}" wx:key="{{index}}">
              <view class="tag" @tap="tap" data-id="0" data-tagid="{{item.id}}" data-tagname="{{item.title}}">{{item.title}}</view>
            </block>
          </view>
        </view>
        <view class="fixedBtn">
          <view class="fixedBtnGrounp">
            <button class="btn" form-type="submit">
              保存
            </button>
          </view>
        </view>
      </form>
      <view class="sub-tags-box" wx:if="{{showModa}}">
        <view class="sub-tags">
          <block wx:for="{{typeTwo}}" wx:key="{{index}}">
            <view class="tag {{item.selecetd ? 'active' : ''}}" @tap="tap" data-id="4" data-tagid="{{item.id}}">{{item.title}}</view>
          </block>
        </view>
        <view @tap="tap" data-id="1" class="close daka icon-chafuben"></view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from "wepy";
  import {$post} from "../../mixins/base"
  export default class infoCharcter extends wepy.page {

    config = {
      navigationBarTitleText: '角色'
    }

    data = {
      showModa: false,
      selectTypeOne: [],
      selectTypeTow: [121],
      typeOne: [],
      typeTwo: [],
      diyType: ''
    }

    methods = {
      tap(e) {
        const _this = this;
        const {selectTypeOne, selectTypeTow, diyType, typeTwo} = _this.$data;
        const selectTypeTow1 = selectTypeTow;
        const {id, tagid, tagname} = e.currentTarget.dataset;
        const {value} = e.detail;
        switch (id | 0) {
          //点击一级类型,获取二级类型
          case 0:
            _this.showModa = true;
            _this.$getTypeTwo(tagid);
            if (selectTypeOne.length < 4 && !~selectTypeOne.indexOf(tagname)) _this.selectTypeOne.push(tagname);
            break;
          //关闭moda
          case 1:
            _this.showModa = false;
            break;
          //自定义添加按钮
          case 2:
            if (selectTypeOne.length < 4 && !~selectTypeOne.indexOf(diyType)) {
              _this.selectTypeOne.push(diyType);
              _this.diyType = '';
            }
            break;
          //自定input
          case 3:
            _this.diyType = value;
            break;
          //二级类型选择
          case 4:
            if (~selectTypeTow.indexOf(tagid)) {
              for (let i = 0; i < selectTypeTow.length; i++) {
                if (selectTypeTow[i] === tagid) {
                  selectTypeTow1.splice(i,1);
                  _this.selectTypeTow = selectTypeTow1;
                  _this.$addSelecetd(typeTwo, false);
                  _this.$apply();
                }
              }
            }else {
              _this.selectTypeTow.push(tagid);
              _this.$apply();
              _this.$addSelecetd(typeTwo, true);
            }
            break;
        }
        _this.$apply();
      }
    }

    onShow() {
      const _this = this;
      //获取一级分类
      _this.$getTypeOne();
    }

    //二级类型添加selecetd属性
    $addSelecetd(typeTwo, anti) {
      const _this = this;
      const typeTwo1 = typeTwo;
      const {selectTypeTow} = _this.$data;
      for (let i = 0; i < typeTwo.length; i++) {
        for (let j = 0; j < selectTypeTow.length; j++) {
          if (typeTwo[i].id === selectTypeTow[j]) {
            typeTwo1[i].selecetd = anti;
          }
        }
      }
      console.log(typeTwo1)
      _this.typeTwo = typeTwo1;
      _this.$apply();
    }

    //获取一级分类
    $getTypeOne() {
      const _this = this;
      $post('/async!gotFirstArtistType.action')
      .then(data => {
        _this.typeOne = data;
        _this.$apply();
      })
      .catch(err => console.log(err))
    }

    //获取二级分类
    $getTypeTwo(firstArtisyTypeId) {
      const _this = this;
      $post('/async!gotSecondArtistType.action', {
        firstArtisyTypeId
      }, true)
      .then(data => {
        _this.typeTwo = data;
        _this.$addSelecetd(data, true);
        _this.$apply();
      })
      .catch(err => console.log(err))
    }
  }
</script>

