<style lang="less" scoped>
  .container {
    background-color: #F7F7F7;
    .user-head {
      width: 100%;
      box-sizing: border-box;
      background: linear-gradient(90deg,#eb3c3c,#ff7459);
      padding: 40rpx 30rpx;
      .avatar {
        width: 100%;
        display: flex;
        align-items: center;
        box-sizing: border-box;
        .avatar-img {
          display: flex;
          align-items: center;
          justify-content: center;
          width: 130rpx;
          height: 130rpx;
          border-radius: 100%;
          overflow: hidden;
          image {
            max-width: 100%;
            max-height: 100%;
          }
        }
        .user-name-money {
          flex: 1;
          display: flex;
          flex-direction: column;
          justify-content: center;
          margin-left: 20rpx;
          overflow: hidden;
          .name {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            font-size: 32rpx;
            color: #fff;
          }
          .money {
            margin-top: 6rpx;
            font-size: 30rpx;
            color: hsla(0,0%,100%,.7);
          }
        }
        .arrow {
          font-size: 32rpx;
          color: #fff;
        }
      }
    }
    .cells {
      margin-top: 20rpx;
      .cell {
        box-sizing: border-box;
        display: flex;
        align-items: center;
        padding: 20rpx 30rpx;
        background: #fff;
        border-bottom: 1px solid #f5f5f5;
      }
      .cell-bd {
        flex: 1;
        margin-left: 20rpx;
        font-size: 34rpx;
        color: #666;
      }
      .cell-ft {
        font-size: 32rpx;
        color: #cdcdcd;
      }
    }
  }
</style>
<template>
  <view class="container">
    <view class="user-head">
      <view class="avatar">
        <image class="avatar-img" src="{{userInfo.avatarUrl}}"></image>
        <view class="user-name-money">
          <view class="name">{{userInfo.nickName}}</view>
          <view class="money">余额：¥{{userInfo.money}}</view>
        </view>
        <view class="arrow daka icon-right"></view>
      </view>
    </view>
    <view class="cells">
      <navigator class="cell-link" url="{{item.url}}" wx:for="{{list}}" wx:key="key">
        <view class="cell">
          <view class="cell-hd daka {{item.icon}}"></view>
          <view class="cell-bd">{{item.title}}</view>
          <view class="cell-ft daka icon-right"></view>
        </view>
      </navigator>
    </view>
  </view>
</template>

<script>
  import wepy from "wepy";
  import user from '../../mixins/user'

  export default class Me extends wepy.page {
    mixins = [user]
    data = {
      userInfo: {
        nickName: '加载中...',
        avatarUrl: '../../images/avatar/icon-avatar@2x.png',
        money: '385.00'
      },
      list: [
        {title: '我的主页', icon: 'icon-home', url: '/pages/user/home'},
        {title: '我的账户', icon: 'icon-zhanghu', url: '/pages/user/account'},
        {title: '我要认证', icon: 'icon-renzheng', url: '/pages/user/certification'},
        {title: '我报名的', icon: 'icon-baoming', url: '/pages/user/registered'},
        {title: '我发布的', icon: 'icon-fabu', url: '/pages/user/published'},
        {title: '旗下大咖', icon: 'icon-daka', url: '/pages/user/artist'}]
    }

    computed = {
      nickName() {
//        const info = this.getObject(this.userInfo)
        const info = this.userInfo
        // 名称或头像不为空的，才认为是授权用户
        return (info.nickName || info.avatarUrl) ? info.nickName : '未授权用户'
      }
    }

    onShow() {
      // 初始化页面数据
      this.$getUserInfo((info) => {
          this.userInfo.nickName = info.nickName
          this.userInfo.avatarUrl = info.avatarUrl
//        const uinfo = this.getObject(info)
//        const userInfo = this.getObject(this.userInfo)
//        this.userInfo = Object.assign({}, userInfo, uinfo)
      })
    }
  }
</script>

