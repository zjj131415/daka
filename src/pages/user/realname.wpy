<style lang="less" scoped>
  .container {
    .title {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-bottom: 20rpx;
      padding:20rpx 30rpx;
      background:#fff;
      .status {
        font-size: 30rpx;
        color: #666666;
      }
      .result {
        font-size: 28rpx;
        color: #979797;
      }
    }
    .enter {
      display: flex;
      align-items: center;
      padding:20rpx 30rpx;
      background:#fff;
      &.card {
        margin-bottom: 20rpx;
        border-top: 1px solid #EAEAEA;
      }
      .amount {
        margin-right: 20rpx;
        font-size: 30rpx;
        color: #2D2D2D;
      }
      .enter-money {
        flex: 1;
        font-size: 30rpx;
        color: #2D2D2D;
      }
    }
    .upload-title {
      padding:20rpx 30rpx;
      background:#fff;
      border-bottom: 1px solid #EAEAEA;
      font-size: 30rpx;
      color: #2D2D2D;
    }
    .upload-group {
      padding:40rpx 30rpx;
      background:#fff;
      border-bottom: 1px solid #EAEAEA;
      .upload-info {
        display: flex;
        align-items: center;
        justify-content: space-between;
        .upload {
          width: 200rpx;
          height: 200rpx;
          line-height: 200rpx;
          text-align: center;
          box-sizing: border-box;
          border: 2px dashed #E2E2E2;
          font-size: 50rpx;
          color: #D1D1D1;
        }
        .upload-image {
          width: 200rpx;
          height: 200rpx;
        }
        .arrow {
          font-size: 40rpx;
          color: #D1D1D1;
        }
        .img-wrap {
          width: 200rpx;
          height: 240rpx;
          overflow: hidden;
          .sample {
            display: block;
            width: 200rpx;
          }
        }
      }
    }
    .description {
      margin-top: 60rpx;
      font-size: 28rpx;
      color: #4C4C4C;
    }
    .rule {
      margin-top: 30rpx;
      font-size: 27rpx;
      color: #797979;
    }
  }
</style>
<template>
  <view class="container">
    <form bindsubmit="submit">
      <view class="title">
        <view class="status">认证状态</view>
        <view class="result">{{userInfo.auth === 1 ? '已认证' : '未认证'}}</view>
      </view>
      <view class="enter">
        <view class="amount">真实姓名</view>
        <input type="text" class="enter-money" name="name" placeholder="请输入身份证姓名"/>
      </view>
      <view class="enter card">
        <view class="amount">证件号码</view>
        <input type="idcard" class="enter-money" name="idcard" placeholder="请输入身份证号码"/>
      </view>
      <view class="upload-title">上传持证照</view>
      <view class="upload-group">
        <view class="upload-info">
          <view class="upload" @tap="tap" data-id="0"  wx:if="{{!imgUrl}}">+</view>
          <image class="upload-image" @tap="tap" data-id="0" src="{{imgUrl}}" wx:if="{{imgUrl}}"></image>
          <view class="arrow">→</view>
          <view class="img-wrap">
            <image class="sample" src="../../images/sample.jpg" mode="widthFix"></image>
          </view>
        </view>
        <view class="description">证件上传要求如下：</view>
        <view class="rule">1.持证正面照需本人手持证件，免冠未妆能辨识</view>
        <view class="rule">2.证件上信息/号码/住址需清晰可见</view>
        <view class="rule">3.照片大小5M以内</view>
      </view>
      <view class="fixedBtn">
        <view class="fixedBtnGrounp">
          <button class="btn" form-type="submit">
            认证  
          </button>
        </view>
      </view>
    </form>
  </view>
</template>

<script>
  import wepy from "wepy";
  import {$post, $uploadImg} from '../../mixins/base'
  export default class Realname extends wepy.page {
    config = {
      navigationBarTitleText: '实名认证'
    }

    data = {
      userInfo: {},
      imgUrl: '',
      upImp: ''
    }

    methods = {
      tap(e) {
        console.log(e)
        const _this = this;
        const {id} = e.currentTarget.dataset;
        switch (id | 0) {
          case 0:
            _this.$imgUpload();
            break;
        }
       },
      submit(e) {
        const _this = this;
        const {user} = _this.$parent.globalData;
        const {memberId} = user;
        const {name, idcard} = e.detail.value;
        const {upImp} = _this.$data;
        const reg = /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/;
        if (!reg.test(idcard)) {
          wepy.showModal({
            title: '提示',
            content: '身份证号码不合法，请核对再试',
            showCancel: false
          })
          return false;
        }
        if (!name || !upImp) {
          wepy.showModal({
            title: '提示',
            content: '填写完整才能提交哦！',
            showCancel: false
          })
          return false;
        }
        //提交数据
        $post('/wechat!saveAuth.action', {
          memberId,
          realName: name,
          idcard,
          idcardImage: upImp
        }, true)
        .then(data => {
          if (data.result === 'succ') {
            //修改成功提示并且返回上一页
            wepy.showToast({
              title: '修改成功',
              icon: 'success',
              duration: 2000
            });
            setTimeout(wepy.navigateBack, 1000);
          }else {
            wepy.showToast({
              title: '认证失败',
              image: '/images/error.png',
              duration: 2000
            });
          }
        })
        .catch(err => {
          wepy.showToast({
            title: '认证失败',
            image: '/images/error.png',
            duration: 2000
          });
        })
      }
    }

    onShow() {
      const _this = this;
      const {user} = _this.$parent.globalData;
      const {resumeId} = user;
      //获取用户信息
      _this.$looadInfo(resumeId);
    }

    //图片上传
    $imgUpload() {
      const _this =this;
      $uploadImg(1)
      .then(data => {
        const {imgUrls, tempFilePaths} = data;
        _this.upImp = imgUrls[0];
        _this.imgUrl = tempFilePaths[0];
        _this.$apply();
      })
      .catch(err => {
        wepy.showToast({
          title: '图片上传失败',
          image: '/images/error.png',
          duration: 2000
        });
      })
    }

    //获取用户信息
    $looadInfo(resumeId) {
      const _this = this;
      //获取用户信息
      $post('/async!gotMyPerformResume.action', {
        resumeId
      })
      .then(data => { 
        _this.userInfo = data;
        _this.$apply();
      })
      .catch(err => {
        wepy.showToast({
          title: '获取用户信息失败！',
          image: '/images/error.png',
          duration: 2000
        });
      })
    }
  }
</script>

